#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CAESGenome.Transfer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CgfOld")]
	public partial class ExistingDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbarcode(barcode instance);
    partial void Updatebarcode(barcode instance);
    partial void Deletebarcode(barcode instance);
    partial void Insertuseracct(useracct instance);
    partial void Updateuseracct(useracct instance);
    partial void Deleteuseracct(useracct instance);
    partial void Insertdepartment(department instance);
    partial void Updatedepartment(department instance);
    partial void Deletedepartment(department instance);
    partial void Insertpi(pi instance);
    partial void Updatepi(pi instance);
    partial void Deletepi(pi instance);
    partial void Insertrecharge(recharge instance);
    partial void Updaterecharge(recharge instance);
    partial void Deleterecharge(recharge instance);
    partial void Insertsubmission_userjob_bacterialclone(submission_userjob_bacterialclone instance);
    partial void Updatesubmission_userjob_bacterialclone(submission_userjob_bacterialclone instance);
    partial void Deletesubmission_userjob_bacterialclone(submission_userjob_bacterialclone instance);
    partial void Insertsubmission_userjob_qbot_colonypicking(submission_userjob_qbot_colonypicking instance);
    partial void Updatesubmission_userjob_qbot_colonypicking(submission_userjob_qbot_colonypicking instance);
    partial void Deletesubmission_userjob_qbot_colonypicking(submission_userjob_qbot_colonypicking instance);
    partial void Insertsubmission_userjob_qbot_replicating(submission_userjob_qbot_replicating instance);
    partial void Updatesubmission_userjob_qbot_replicating(submission_userjob_qbot_replicating instance);
    partial void Deletesubmission_userjob_qbot_replicating(submission_userjob_qbot_replicating instance);
    partial void Insertsubmission_userjob_sublibrary(submission_userjob_sublibrary instance);
    partial void Updatesubmission_userjob_sublibrary(submission_userjob_sublibrary instance);
    partial void Deletesubmission_userjob_sublibrary(submission_userjob_sublibrary instance);
    partial void Insertsubmission_userjob_userrun(submission_userjob_userrun instance);
    partial void Updatesubmission_userjob_userrun(submission_userjob_userrun instance);
    partial void Deletesubmission_userjob_userrun(submission_userjob_userrun instance);
    partial void Insertsubmission_userjob_userrun_genotyping(submission_userjob_userrun_genotyping instance);
    partial void Updatesubmission_userjob_userrun_genotyping(submission_userjob_userrun_genotyping instance);
    partial void Deletesubmission_userjob_userrun_genotyping(submission_userjob_userrun_genotyping instance);
    partial void Insertsubmission_userjob(submission_userjob instance);
    partial void Updatesubmission_userjob(submission_userjob instance);
    partial void Deletesubmission_userjob(submission_userjob instance);
    partial void Insertsubmission_userplate(submission_userplate instance);
    partial void Updatesubmission_userplate(submission_userplate instance);
    partial void Deletesubmission_userplate(submission_userplate instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public ExistingDataDataContext() : 
				base(global::CAESGenome.Transfer.Properties.Settings.Default.CgfOldConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ExistingDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<barcode> barcodes
		{
			get
			{
				return this.GetTable<barcode>();
			}
		}
		
		public System.Data.Linq.Table<useracct> useraccts
		{
			get
			{
				return this.GetTable<useracct>();
			}
		}
		
		public System.Data.Linq.Table<department> departments
		{
			get
			{
				return this.GetTable<department>();
			}
		}
		
		public System.Data.Linq.Table<pi> pis
		{
			get
			{
				return this.GetTable<pi>();
			}
		}
		
		public System.Data.Linq.Table<recharge> recharges
		{
			get
			{
				return this.GetTable<recharge>();
			}
		}
		
		public System.Data.Linq.Table<staff> staffs
		{
			get
			{
				return this.GetTable<staff>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_bacterialclone> submission_userjob_bacterialclones
		{
			get
			{
				return this.GetTable<submission_userjob_bacterialclone>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_qbot_colonypicking> submission_userjob_qbot_colonypickings
		{
			get
			{
				return this.GetTable<submission_userjob_qbot_colonypicking>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_qbot_replicating> submission_userjob_qbot_replicatings
		{
			get
			{
				return this.GetTable<submission_userjob_qbot_replicating>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_sublibrary> submission_userjob_sublibraries
		{
			get
			{
				return this.GetTable<submission_userjob_sublibrary>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_userrun> submission_userjob_userruns
		{
			get
			{
				return this.GetTable<submission_userjob_userrun>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob_userrun_genotyping> submission_userjob_userrun_genotypings
		{
			get
			{
				return this.GetTable<submission_userjob_userrun_genotyping>();
			}
		}
		
		public System.Data.Linq.Table<submission_userjob> submission_userjobs
		{
			get
			{
				return this.GetTable<submission_userjob>();
			}
		}
		
		public System.Data.Linq.Table<submission_userplate> submission_userplates
		{
			get
			{
				return this.GetTable<submission_userplate>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.barcode")]
	public partial class barcode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _plateID;
		
		private int _plateSubID;
		
		private int _primerID;
		
		private int _stage;
		
		private int _sourceBarcode;
		
		private System.DateTime _date;
		
		private int _done;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnplateIDChanging(int value);
    partial void OnplateIDChanged();
    partial void OnplateSubIDChanging(int value);
    partial void OnplateSubIDChanged();
    partial void OnprimerIDChanging(int value);
    partial void OnprimerIDChanged();
    partial void OnstageChanging(int value);
    partial void OnstageChanged();
    partial void OnsourceBarcodeChanging(int value);
    partial void OnsourceBarcodeChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OndoneChanging(int value);
    partial void OndoneChanged();
    #endregion
		
		public barcode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateID", DbType="Int NOT NULL")]
		public int plateID
		{
			get
			{
				return this._plateID;
			}
			set
			{
				if ((this._plateID != value))
				{
					this.OnplateIDChanging(value);
					this.SendPropertyChanging();
					this._plateID = value;
					this.SendPropertyChanged("plateID");
					this.OnplateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateSubID", DbType="Int NOT NULL")]
		public int plateSubID
		{
			get
			{
				return this._plateSubID;
			}
			set
			{
				if ((this._plateSubID != value))
				{
					this.OnplateSubIDChanging(value);
					this.SendPropertyChanging();
					this._plateSubID = value;
					this.SendPropertyChanged("plateSubID");
					this.OnplateSubIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primerID", DbType="Int NOT NULL")]
		public int primerID
		{
			get
			{
				return this._primerID;
			}
			set
			{
				if ((this._primerID != value))
				{
					this.OnprimerIDChanging(value);
					this.SendPropertyChanging();
					this._primerID = value;
					this.SendPropertyChanged("primerID");
					this.OnprimerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stage", DbType="Int NOT NULL")]
		public int stage
		{
			get
			{
				return this._stage;
			}
			set
			{
				if ((this._stage != value))
				{
					this.OnstageChanging(value);
					this.SendPropertyChanging();
					this._stage = value;
					this.SendPropertyChanged("stage");
					this.OnstageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sourceBarcode", DbType="Int NOT NULL")]
		public int sourceBarcode
		{
			get
			{
				return this._sourceBarcode;
			}
			set
			{
				if ((this._sourceBarcode != value))
				{
					this.OnsourceBarcodeChanging(value);
					this.SendPropertyChanging();
					this._sourceBarcode = value;
					this.SendPropertyChanged("sourceBarcode");
					this.OnsourceBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_done", DbType="Int NOT NULL")]
		public int done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.useracct")]
	public partial class useracct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _useracctid;
		
		private string _valid;
		
		private int _rechargeid;
		
		private int _userid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseracctidChanging(int value);
    partial void OnuseracctidChanged();
    partial void OnvalidChanging(string value);
    partial void OnvalidChanged();
    partial void OnrechargeidChanging(int value);
    partial void OnrechargeidChanged();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    #endregion
		
		public useracct()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_useracctid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int useracctid
		{
			get
			{
				return this._useracctid;
			}
			set
			{
				if ((this._useracctid != value))
				{
					this.OnuseracctidChanging(value);
					this.SendPropertyChanging();
					this._useracctid = value;
					this.SendPropertyChanged("useracctid");
					this.OnuseracctidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid", DbType="VarChar(10)")]
		public string valid
		{
			get
			{
				return this._valid;
			}
			set
			{
				if ((this._valid != value))
				{
					this.OnvalidChanging(value);
					this.SendPropertyChanging();
					this._valid = value;
					this.SendPropertyChanged("valid");
					this.OnvalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rechargeid", DbType="Int NOT NULL")]
		public int rechargeid
		{
			get
			{
				return this._rechargeid;
			}
			set
			{
				if ((this._rechargeid != value))
				{
					this.OnrechargeidChanging(value);
					this.SendPropertyChanging();
					this._rechargeid = value;
					this.SendPropertyChanged("rechargeid");
					this.OnrechargeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", DbType="Int NOT NULL")]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.departments")]
	public partial class department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _departmentid;
		
		private string _department1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndepartmentidChanging(int value);
    partial void OndepartmentidChanged();
    partial void Ondepartment1Changing(string value);
    partial void Ondepartment1Changed();
    #endregion
		
		public department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int departmentid
		{
			get
			{
				return this._departmentid;
			}
			set
			{
				if ((this._departmentid != value))
				{
					this.OndepartmentidChanging(value);
					this.SendPropertyChanging();
					this._departmentid = value;
					this.SendPropertyChanged("departmentid");
					this.OndepartmentidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="department", Storage="_department1", DbType="VarChar(150)")]
		public string department1
		{
			get
			{
				return this._department1;
			}
			set
			{
				if ((this._department1 != value))
				{
					this.Ondepartment1Changing(value);
					this.SendPropertyChanging();
					this._department1 = value;
					this.SendPropertyChanged("department1");
					this.Ondepartment1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.pi")]
	public partial class pi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _piid;
		
		private string _pilastname;
		
		private string _pifirstname;
		
		private string _piemail;
		
		private string _pifax;
		
		private string _piphonenum;
		
		private string _pititle;
		
		private System.Nullable<System.DateTime> _pidatejoined;
		
		private string _piusername;
		
		private string _pipassword;
		
		private int _universityid;
		
		private int _departmentid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpiidChanging(int value);
    partial void OnpiidChanged();
    partial void OnpilastnameChanging(string value);
    partial void OnpilastnameChanged();
    partial void OnpifirstnameChanging(string value);
    partial void OnpifirstnameChanged();
    partial void OnpiemailChanging(string value);
    partial void OnpiemailChanged();
    partial void OnpifaxChanging(string value);
    partial void OnpifaxChanged();
    partial void OnpiphonenumChanging(string value);
    partial void OnpiphonenumChanged();
    partial void OnpititleChanging(string value);
    partial void OnpititleChanged();
    partial void OnpidatejoinedChanging(System.Nullable<System.DateTime> value);
    partial void OnpidatejoinedChanged();
    partial void OnpiusernameChanging(string value);
    partial void OnpiusernameChanged();
    partial void OnpipasswordChanging(string value);
    partial void OnpipasswordChanged();
    partial void OnuniversityidChanging(int value);
    partial void OnuniversityidChanged();
    partial void OndepartmentidChanging(int value);
    partial void OndepartmentidChanged();
    #endregion
		
		public pi()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int piid
		{
			get
			{
				return this._piid;
			}
			set
			{
				if ((this._piid != value))
				{
					this.OnpiidChanging(value);
					this.SendPropertyChanging();
					this._piid = value;
					this.SendPropertyChanged("piid");
					this.OnpiidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pilastname", DbType="VarChar(100)")]
		public string pilastname
		{
			get
			{
				return this._pilastname;
			}
			set
			{
				if ((this._pilastname != value))
				{
					this.OnpilastnameChanging(value);
					this.SendPropertyChanging();
					this._pilastname = value;
					this.SendPropertyChanged("pilastname");
					this.OnpilastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pifirstname", DbType="VarChar(100)")]
		public string pifirstname
		{
			get
			{
				return this._pifirstname;
			}
			set
			{
				if ((this._pifirstname != value))
				{
					this.OnpifirstnameChanging(value);
					this.SendPropertyChanging();
					this._pifirstname = value;
					this.SendPropertyChanged("pifirstname");
					this.OnpifirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piemail", DbType="VarChar(100)")]
		public string piemail
		{
			get
			{
				return this._piemail;
			}
			set
			{
				if ((this._piemail != value))
				{
					this.OnpiemailChanging(value);
					this.SendPropertyChanging();
					this._piemail = value;
					this.SendPropertyChanged("piemail");
					this.OnpiemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pifax", DbType="VarChar(50)")]
		public string pifax
		{
			get
			{
				return this._pifax;
			}
			set
			{
				if ((this._pifax != value))
				{
					this.OnpifaxChanging(value);
					this.SendPropertyChanging();
					this._pifax = value;
					this.SendPropertyChanged("pifax");
					this.OnpifaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piphonenum", DbType="VarChar(50)")]
		public string piphonenum
		{
			get
			{
				return this._piphonenum;
			}
			set
			{
				if ((this._piphonenum != value))
				{
					this.OnpiphonenumChanging(value);
					this.SendPropertyChanging();
					this._piphonenum = value;
					this.SendPropertyChanged("piphonenum");
					this.OnpiphonenumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pititle", DbType="VarChar(50)")]
		public string pititle
		{
			get
			{
				return this._pititle;
			}
			set
			{
				if ((this._pititle != value))
				{
					this.OnpititleChanging(value);
					this.SendPropertyChanging();
					this._pititle = value;
					this.SendPropertyChanged("pititle");
					this.OnpititleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pidatejoined", DbType="DateTime")]
		public System.Nullable<System.DateTime> pidatejoined
		{
			get
			{
				return this._pidatejoined;
			}
			set
			{
				if ((this._pidatejoined != value))
				{
					this.OnpidatejoinedChanging(value);
					this.SendPropertyChanging();
					this._pidatejoined = value;
					this.SendPropertyChanged("pidatejoined");
					this.OnpidatejoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piusername", DbType="VarChar(100)")]
		public string piusername
		{
			get
			{
				return this._piusername;
			}
			set
			{
				if ((this._piusername != value))
				{
					this.OnpiusernameChanging(value);
					this.SendPropertyChanging();
					this._piusername = value;
					this.SendPropertyChanged("piusername");
					this.OnpiusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pipassword", DbType="VarChar(20)")]
		public string pipassword
		{
			get
			{
				return this._pipassword;
			}
			set
			{
				if ((this._pipassword != value))
				{
					this.OnpipasswordChanging(value);
					this.SendPropertyChanging();
					this._pipassword = value;
					this.SendPropertyChanged("pipassword");
					this.OnpipasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_universityid", DbType="Int NOT NULL")]
		public int universityid
		{
			get
			{
				return this._universityid;
			}
			set
			{
				if ((this._universityid != value))
				{
					this.OnuniversityidChanging(value);
					this.SendPropertyChanging();
					this._universityid = value;
					this.SendPropertyChanged("universityid");
					this.OnuniversityidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_departmentid", DbType="Int NOT NULL")]
		public int departmentid
		{
			get
			{
				return this._departmentid;
			}
			set
			{
				if ((this._departmentid != value))
				{
					this.OndepartmentidChanging(value);
					this.SendPropertyChanging();
					this._departmentid = value;
					this.SendPropertyChanged("departmentid");
					this.OndepartmentidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.recharge")]
	public partial class recharge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _rechargeid;
		
		private string _accountnum;
		
		private string _valid;
		
		private string _description;
		
		private System.Nullable<System.DateTime> _datestart;
		
		private System.Nullable<System.DateTime> _dateend;
		
		private int _piid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnrechargeidChanging(int value);
    partial void OnrechargeidChanged();
    partial void OnaccountnumChanging(string value);
    partial void OnaccountnumChanged();
    partial void OnvalidChanging(string value);
    partial void OnvalidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndatestartChanging(System.Nullable<System.DateTime> value);
    partial void OndatestartChanged();
    partial void OndateendChanging(System.Nullable<System.DateTime> value);
    partial void OndateendChanged();
    partial void OnpiidChanging(int value);
    partial void OnpiidChanged();
    #endregion
		
		public recharge()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rechargeid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int rechargeid
		{
			get
			{
				return this._rechargeid;
			}
			set
			{
				if ((this._rechargeid != value))
				{
					this.OnrechargeidChanging(value);
					this.SendPropertyChanging();
					this._rechargeid = value;
					this.SendPropertyChanged("rechargeid");
					this.OnrechargeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountnum", DbType="VarChar(50)")]
		public string accountnum
		{
			get
			{
				return this._accountnum;
			}
			set
			{
				if ((this._accountnum != value))
				{
					this.OnaccountnumChanging(value);
					this.SendPropertyChanging();
					this._accountnum = value;
					this.SendPropertyChanged("accountnum");
					this.OnaccountnumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid", DbType="VarChar(10)")]
		public string valid
		{
			get
			{
				return this._valid;
			}
			set
			{
				if ((this._valid != value))
				{
					this.OnvalidChanging(value);
					this.SendPropertyChanging();
					this._valid = value;
					this.SendPropertyChanged("valid");
					this.OnvalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datestart", DbType="DateTime")]
		public System.Nullable<System.DateTime> datestart
		{
			get
			{
				return this._datestart;
			}
			set
			{
				if ((this._datestart != value))
				{
					this.OndatestartChanging(value);
					this.SendPropertyChanging();
					this._datestart = value;
					this.SendPropertyChanged("datestart");
					this.OndatestartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateend", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateend
		{
			get
			{
				return this._dateend;
			}
			set
			{
				if ((this._dateend != value))
				{
					this.OndateendChanging(value);
					this.SendPropertyChanging();
					this._dateend = value;
					this.SendPropertyChanged("dateend");
					this.OndateendChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piid", DbType="Int NOT NULL")]
		public int piid
		{
			get
			{
				return this._piid;
			}
			set
			{
				if ((this._piid != value))
				{
					this.OnpiidChanging(value);
					this.SendPropertyChanging();
					this._piid = value;
					this.SendPropertyChanged("piid");
					this.OnpiidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.staff")]
	public partial class staff
	{
		
		private decimal _staffid;
		
		private string _stafffirst;
		
		private string _stafflast;
		
		private string _staffemail;
		
		private string _stafftitle;
		
		private string _staffpassword;
		
		public staff()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffid", DbType="Decimal(22,0) NOT NULL")]
		public decimal staffid
		{
			get
			{
				return this._staffid;
			}
			set
			{
				if ((this._staffid != value))
				{
					this._staffid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stafffirst", DbType="VarChar(30)")]
		public string stafffirst
		{
			get
			{
				return this._stafffirst;
			}
			set
			{
				if ((this._stafffirst != value))
				{
					this._stafffirst = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stafflast", DbType="VarChar(30)")]
		public string stafflast
		{
			get
			{
				return this._stafflast;
			}
			set
			{
				if ((this._stafflast != value))
				{
					this._stafflast = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffemail", DbType="VarChar(50)")]
		public string staffemail
		{
			get
			{
				return this._staffemail;
			}
			set
			{
				if ((this._staffemail != value))
				{
					this._staffemail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stafftitle", DbType="VarChar(50)")]
		public string stafftitle
		{
			get
			{
				return this._stafftitle;
			}
			set
			{
				if ((this._stafftitle != value))
				{
					this._stafftitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staffpassword", DbType="VarChar(10)")]
		public string staffpassword
		{
			get
			{
				return this._staffpassword;
			}
			set
			{
				if ((this._staffpassword != value))
				{
					this._staffpassword = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_bacterialclone")]
	public partial class submission_userjob_bacterialclone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Seq_Direction;
		
		private int _Primer1;
		
		private int _Primer2;
		
		private int _StrainID;
		
		private int _VectorID;
		
		private int _antibioticID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSeq_DirectionChanging(string value);
    partial void OnSeq_DirectionChanged();
    partial void OnPrimer1Changing(int value);
    partial void OnPrimer1Changed();
    partial void OnPrimer2Changing(int value);
    partial void OnPrimer2Changed();
    partial void OnStrainIDChanging(int value);
    partial void OnStrainIDChanged();
    partial void OnVectorIDChanging(int value);
    partial void OnVectorIDChanged();
    partial void OnantibioticIDChanging(int value);
    partial void OnantibioticIDChanged();
    #endregion
		
		public submission_userjob_bacterialclone()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq_Direction", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Seq_Direction
		{
			get
			{
				return this._Seq_Direction;
			}
			set
			{
				if ((this._Seq_Direction != value))
				{
					this.OnSeq_DirectionChanging(value);
					this.SendPropertyChanging();
					this._Seq_Direction = value;
					this.SendPropertyChanged("Seq_Direction");
					this.OnSeq_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primer1", DbType="Int NOT NULL")]
		public int Primer1
		{
			get
			{
				return this._Primer1;
			}
			set
			{
				if ((this._Primer1 != value))
				{
					this.OnPrimer1Changing(value);
					this.SendPropertyChanging();
					this._Primer1 = value;
					this.SendPropertyChanged("Primer1");
					this.OnPrimer1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Primer2", DbType="Int NOT NULL")]
		public int Primer2
		{
			get
			{
				return this._Primer2;
			}
			set
			{
				if ((this._Primer2 != value))
				{
					this.OnPrimer2Changing(value);
					this.SendPropertyChanging();
					this._Primer2 = value;
					this.SendPropertyChanged("Primer2");
					this.OnPrimer2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrainID", DbType="Int NOT NULL")]
		public int StrainID
		{
			get
			{
				return this._StrainID;
			}
			set
			{
				if ((this._StrainID != value))
				{
					this.OnStrainIDChanging(value);
					this.SendPropertyChanging();
					this._StrainID = value;
					this.SendPropertyChanged("StrainID");
					this.OnStrainIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VectorID", DbType="Int NOT NULL")]
		public int VectorID
		{
			get
			{
				return this._VectorID;
			}
			set
			{
				if ((this._VectorID != value))
				{
					this.OnVectorIDChanging(value);
					this.SendPropertyChanging();
					this._VectorID = value;
					this.SendPropertyChanged("VectorID");
					this.OnVectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_antibioticID", DbType="Int NOT NULL")]
		public int antibioticID
		{
			get
			{
				return this._antibioticID;
			}
			set
			{
				if ((this._antibioticID != value))
				{
					this.OnantibioticIDChanging(value);
					this.SendPropertyChanging();
					this._antibioticID = value;
					this.SendPropertyChanged("antibioticID");
					this.OnantibioticIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_qbot_colonypicking")]
	public partial class submission_userjob_qbot_colonypicking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _vectorID;
		
		private int _hostID;
		
		private string _numOfQTrays;
		
		private string _numOfGlycerol;
		
		private string _concentration;
		
		private string _replication;
		
		private string _numOfColonies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvectorIDChanging(int value);
    partial void OnvectorIDChanged();
    partial void OnhostIDChanging(int value);
    partial void OnhostIDChanged();
    partial void OnnumOfQTraysChanging(string value);
    partial void OnnumOfQTraysChanged();
    partial void OnnumOfGlycerolChanging(string value);
    partial void OnnumOfGlycerolChanged();
    partial void OnconcentrationChanging(string value);
    partial void OnconcentrationChanged();
    partial void OnreplicationChanging(string value);
    partial void OnreplicationChanged();
    partial void OnnumOfColoniesChanging(string value);
    partial void OnnumOfColoniesChanged();
    #endregion
		
		public submission_userjob_qbot_colonypicking()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vectorID", DbType="Int NOT NULL")]
		public int vectorID
		{
			get
			{
				return this._vectorID;
			}
			set
			{
				if ((this._vectorID != value))
				{
					this.OnvectorIDChanging(value);
					this.SendPropertyChanging();
					this._vectorID = value;
					this.SendPropertyChanged("vectorID");
					this.OnvectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostID", DbType="Int NOT NULL")]
		public int hostID
		{
			get
			{
				return this._hostID;
			}
			set
			{
				if ((this._hostID != value))
				{
					this.OnhostIDChanging(value);
					this.SendPropertyChanging();
					this._hostID = value;
					this.SendPropertyChanged("hostID");
					this.OnhostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfQTrays", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string numOfQTrays
		{
			get
			{
				return this._numOfQTrays;
			}
			set
			{
				if ((this._numOfQTrays != value))
				{
					this.OnnumOfQTraysChanging(value);
					this.SendPropertyChanging();
					this._numOfQTrays = value;
					this.SendPropertyChanged("numOfQTrays");
					this.OnnumOfQTraysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfGlycerol", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string numOfGlycerol
		{
			get
			{
				return this._numOfGlycerol;
			}
			set
			{
				if ((this._numOfGlycerol != value))
				{
					this.OnnumOfGlycerolChanging(value);
					this.SendPropertyChanging();
					this._numOfGlycerol = value;
					this.SendPropertyChanged("numOfGlycerol");
					this.OnnumOfGlycerolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_concentration", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string concentration
		{
			get
			{
				return this._concentration;
			}
			set
			{
				if ((this._concentration != value))
				{
					this.OnconcentrationChanging(value);
					this.SendPropertyChanging();
					this._concentration = value;
					this.SendPropertyChanged("concentration");
					this.OnconcentrationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[replication]", Storage="_replication", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string replication
		{
			get
			{
				return this._replication;
			}
			set
			{
				if ((this._replication != value))
				{
					this.OnreplicationChanging(value);
					this.SendPropertyChanging();
					this._replication = value;
					this.SendPropertyChanged("replication");
					this.OnreplicationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfColonies", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string numOfColonies
		{
			get
			{
				return this._numOfColonies;
			}
			set
			{
				if ((this._numOfColonies != value))
				{
					this.OnnumOfColoniesChanging(value);
					this.SendPropertyChanging();
					this._numOfColonies = value;
					this.SendPropertyChanged("numOfColonies");
					this.OnnumOfColoniesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_qbot_replicating")]
	public partial class submission_userjob_qbot_replicating : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _vectorID;
		
		private int _hostID;
		
		private string _numOfSourcePlates;
		
		private string _plateTypeDestination;
		
		private string _replication;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvectorIDChanging(int value);
    partial void OnvectorIDChanged();
    partial void OnhostIDChanging(int value);
    partial void OnhostIDChanged();
    partial void OnnumOfSourcePlatesChanging(string value);
    partial void OnnumOfSourcePlatesChanged();
    partial void OnplateTypeDestinationChanging(string value);
    partial void OnplateTypeDestinationChanged();
    partial void OnreplicationChanging(string value);
    partial void OnreplicationChanged();
    #endregion
		
		public submission_userjob_qbot_replicating()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vectorID", DbType="Int NOT NULL")]
		public int vectorID
		{
			get
			{
				return this._vectorID;
			}
			set
			{
				if ((this._vectorID != value))
				{
					this.OnvectorIDChanging(value);
					this.SendPropertyChanging();
					this._vectorID = value;
					this.SendPropertyChanged("vectorID");
					this.OnvectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostID", DbType="Int NOT NULL")]
		public int hostID
		{
			get
			{
				return this._hostID;
			}
			set
			{
				if ((this._hostID != value))
				{
					this.OnhostIDChanging(value);
					this.SendPropertyChanging();
					this._hostID = value;
					this.SendPropertyChanged("hostID");
					this.OnhostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfSourcePlates", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string numOfSourcePlates
		{
			get
			{
				return this._numOfSourcePlates;
			}
			set
			{
				if ((this._numOfSourcePlates != value))
				{
					this.OnnumOfSourcePlatesChanging(value);
					this.SendPropertyChanging();
					this._numOfSourcePlates = value;
					this.SendPropertyChanged("numOfSourcePlates");
					this.OnnumOfSourcePlatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateTypeDestination", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string plateTypeDestination
		{
			get
			{
				return this._plateTypeDestination;
			}
			set
			{
				if ((this._plateTypeDestination != value))
				{
					this.OnplateTypeDestinationChanging(value);
					this.SendPropertyChanging();
					this._plateTypeDestination = value;
					this.SendPropertyChanged("plateTypeDestination");
					this.OnplateTypeDestinationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[replication]", Storage="_replication", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string replication
		{
			get
			{
				return this._replication;
			}
			set
			{
				if ((this._replication != value))
				{
					this.OnreplicationChanging(value);
					this.SendPropertyChanging();
					this._replication = value;
					this.SendPropertyChanged("replication");
					this.OnreplicationChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_sublibrary")]
	public partial class submission_userjob_sublibrary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _typeOfSamples;
		
		private System.Nullable<double> _concentrationOfDNA;
		
		private System.Nullable<double> _insertGenomeSize;
		
		private System.Nullable<int> _coverage;
		
		private System.Nullable<int> _vectorID;
		
		private int _antibioticID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeOfSamplesChanging(string value);
    partial void OntypeOfSamplesChanged();
    partial void OnconcentrationOfDNAChanging(System.Nullable<double> value);
    partial void OnconcentrationOfDNAChanged();
    partial void OninsertGenomeSizeChanging(System.Nullable<double> value);
    partial void OninsertGenomeSizeChanged();
    partial void OncoverageChanging(System.Nullable<int> value);
    partial void OncoverageChanged();
    partial void OnvectorIDChanging(System.Nullable<int> value);
    partial void OnvectorIDChanged();
    partial void OnantibioticIDChanging(int value);
    partial void OnantibioticIDChanged();
    #endregion
		
		public submission_userjob_sublibrary()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeOfSamples", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string typeOfSamples
		{
			get
			{
				return this._typeOfSamples;
			}
			set
			{
				if ((this._typeOfSamples != value))
				{
					this.OntypeOfSamplesChanging(value);
					this.SendPropertyChanging();
					this._typeOfSamples = value;
					this.SendPropertyChanged("typeOfSamples");
					this.OntypeOfSamplesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_concentrationOfDNA", DbType="Float")]
		public System.Nullable<double> concentrationOfDNA
		{
			get
			{
				return this._concentrationOfDNA;
			}
			set
			{
				if ((this._concentrationOfDNA != value))
				{
					this.OnconcentrationOfDNAChanging(value);
					this.SendPropertyChanging();
					this._concentrationOfDNA = value;
					this.SendPropertyChanged("concentrationOfDNA");
					this.OnconcentrationOfDNAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insertGenomeSize", DbType="Float")]
		public System.Nullable<double> insertGenomeSize
		{
			get
			{
				return this._insertGenomeSize;
			}
			set
			{
				if ((this._insertGenomeSize != value))
				{
					this.OninsertGenomeSizeChanging(value);
					this.SendPropertyChanging();
					this._insertGenomeSize = value;
					this.SendPropertyChanged("insertGenomeSize");
					this.OninsertGenomeSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_coverage", DbType="Int")]
		public System.Nullable<int> coverage
		{
			get
			{
				return this._coverage;
			}
			set
			{
				if ((this._coverage != value))
				{
					this.OncoverageChanging(value);
					this.SendPropertyChanging();
					this._coverage = value;
					this.SendPropertyChanged("coverage");
					this.OncoverageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vectorID", DbType="Int")]
		public System.Nullable<int> vectorID
		{
			get
			{
				return this._vectorID;
			}
			set
			{
				if ((this._vectorID != value))
				{
					this.OnvectorIDChanging(value);
					this.SendPropertyChanging();
					this._vectorID = value;
					this.SendPropertyChanged("vectorID");
					this.OnvectorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_antibioticID", DbType="Int NOT NULL")]
		public int antibioticID
		{
			get
			{
				return this._antibioticID;
			}
			set
			{
				if ((this._antibioticID != value))
				{
					this.OnantibioticIDChanging(value);
					this.SendPropertyChanging();
					this._antibioticID = value;
					this.SendPropertyChanged("antibioticID");
					this.OnantibioticIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_userrun")]
	public partial class submission_userjob_userrun : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _Seq_Direction;
		
		private short _DyeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnSeq_DirectionChanging(string value);
    partial void OnSeq_DirectionChanged();
    partial void OnDyeIDChanging(short value);
    partial void OnDyeIDChanged();
    #endregion
		
		public submission_userjob_userrun()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Seq_Direction", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Seq_Direction
		{
			get
			{
				return this._Seq_Direction;
			}
			set
			{
				if ((this._Seq_Direction != value))
				{
					this.OnSeq_DirectionChanging(value);
					this.SendPropertyChanging();
					this._Seq_Direction = value;
					this.SendPropertyChanged("Seq_Direction");
					this.OnSeq_DirectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DyeID", DbType="SmallInt NOT NULL")]
		public short DyeID
		{
			get
			{
				return this._DyeID;
			}
			set
			{
				if ((this._DyeID != value))
				{
					this.OnDyeIDChanging(value);
					this.SendPropertyChanging();
					this._DyeID = value;
					this.SendPropertyChanged("DyeID");
					this.OnDyeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjob_userrun_genotyping")]
	public partial class submission_userjob_userrun_genotyping : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _dyeIDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndyeIDsChanging(string value);
    partial void OndyeIDsChanged();
    #endregion
		
		public submission_userjob_userrun_genotyping()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dyeIDs", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string dyeIDs
		{
			get
			{
				return this._dyeIDs;
			}
			set
			{
				if ((this._dyeIDs != value))
				{
					this.OndyeIDsChanging(value);
					this.SendPropertyChanging();
					this._dyeIDs = value;
					this.SendPropertyChanged("dyeIDs");
					this.OndyeIDsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userjobs")]
	public partial class submission_userjob : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _dateSubmitted;
		
		private int _uid;
		
		private string _accountid;
		
		private string _JobName;
		
		private int _submissionType;
		
		private int _HowManyPlates;
		
		private string _plateType;
		
		private string _Comment;
		
		private int _id2;
		
		private int _done;
		
		private System.DateTime _statusDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateSubmittedChanging(System.DateTime value);
    partial void OndateSubmittedChanged();
    partial void OnuidChanging(int value);
    partial void OnuidChanged();
    partial void OnaccountidChanging(string value);
    partial void OnaccountidChanged();
    partial void OnJobNameChanging(string value);
    partial void OnJobNameChanged();
    partial void OnsubmissionTypeChanging(int value);
    partial void OnsubmissionTypeChanged();
    partial void OnHowManyPlatesChanging(int value);
    partial void OnHowManyPlatesChanged();
    partial void OnplateTypeChanging(string value);
    partial void OnplateTypeChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    partial void Onid2Changing(int value);
    partial void Onid2Changed();
    partial void OndoneChanging(int value);
    partial void OndoneChanged();
    partial void OnstatusDateChanging(System.DateTime value);
    partial void OnstatusDateChanged();
    #endregion
		
		public submission_userjob()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateSubmitted", DbType="Date NOT NULL")]
		public System.DateTime dateSubmitted
		{
			get
			{
				return this._dateSubmitted;
			}
			set
			{
				if ((this._dateSubmitted != value))
				{
					this.OndateSubmittedChanging(value);
					this.SendPropertyChanging();
					this._dateSubmitted = value;
					this.SendPropertyChanged("dateSubmitted");
					this.OndateSubmittedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_uid", DbType="Int NOT NULL")]
		public int uid
		{
			get
			{
				return this._uid;
			}
			set
			{
				if ((this._uid != value))
				{
					this.OnuidChanging(value);
					this.SendPropertyChanging();
					this._uid = value;
					this.SendPropertyChanged("uid");
					this.OnuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accountid", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string accountid
		{
			get
			{
				return this._accountid;
			}
			set
			{
				if ((this._accountid != value))
				{
					this.OnaccountidChanging(value);
					this.SendPropertyChanging();
					this._accountid = value;
					this.SendPropertyChanged("accountid");
					this.OnaccountidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string JobName
		{
			get
			{
				return this._JobName;
			}
			set
			{
				if ((this._JobName != value))
				{
					this.OnJobNameChanging(value);
					this.SendPropertyChanging();
					this._JobName = value;
					this.SendPropertyChanged("JobName");
					this.OnJobNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_submissionType", DbType="Int NOT NULL")]
		public int submissionType
		{
			get
			{
				return this._submissionType;
			}
			set
			{
				if ((this._submissionType != value))
				{
					this.OnsubmissionTypeChanging(value);
					this.SendPropertyChanging();
					this._submissionType = value;
					this.SendPropertyChanged("submissionType");
					this.OnsubmissionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HowManyPlates", DbType="Int NOT NULL")]
		public int HowManyPlates
		{
			get
			{
				return this._HowManyPlates;
			}
			set
			{
				if ((this._HowManyPlates != value))
				{
					this.OnHowManyPlatesChanging(value);
					this.SendPropertyChanging();
					this._HowManyPlates = value;
					this.SendPropertyChanged("HowManyPlates");
					this.OnHowManyPlatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateType", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string plateType
		{
			get
			{
				return this._plateType;
			}
			set
			{
				if ((this._plateType != value))
				{
					this.OnplateTypeChanging(value);
					this.SendPropertyChanging();
					this._plateType = value;
					this.SendPropertyChanged("plateType");
					this.OnplateTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(MAX)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id2", DbType="Int NOT NULL")]
		public int id2
		{
			get
			{
				return this._id2;
			}
			set
			{
				if ((this._id2 != value))
				{
					this.Onid2Changing(value);
					this.SendPropertyChanging();
					this._id2 = value;
					this.SendPropertyChanged("id2");
					this.Onid2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_done", DbType="Int NOT NULL")]
		public int done
		{
			get
			{
				return this._done;
			}
			set
			{
				if ((this._done != value))
				{
					this.OndoneChanging(value);
					this.SendPropertyChanging();
					this._done = value;
					this.SendPropertyChanged("done");
					this.OndoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusDate", DbType="Date NOT NULL")]
		public System.DateTime statusDate
		{
			get
			{
				return this._statusDate;
			}
			set
			{
				if ((this._statusDate != value))
				{
					this.OnstatusDateChanging(value);
					this.SendPropertyChanging();
					this._statusDate = value;
					this.SendPropertyChanged("statusDate");
					this.OnstatusDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.submission_userplates")]
	public partial class submission_userplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _JobID;
		
		private string _plateName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnJobIDChanging(int value);
    partial void OnJobIDChanged();
    partial void OnplateNameChanging(string value);
    partial void OnplateNameChanged();
    #endregion
		
		public submission_userplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobID", DbType="Int NOT NULL")]
		public int JobID
		{
			get
			{
				return this._JobID;
			}
			set
			{
				if ((this._JobID != value))
				{
					this.OnJobIDChanging(value);
					this.SendPropertyChanging();
					this._JobID = value;
					this.SendPropertyChanged("JobID");
					this.OnJobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_plateName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string plateName
		{
			get
			{
				return this._plateName;
			}
			set
			{
				if ((this._plateName != value))
				{
					this.OnplateNameChanging(value);
					this.SendPropertyChanging();
					this._plateName = value;
					this.SendPropertyChanged("plateName");
					this.OnplateNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userid;
		
		private string _username;
		
		private string _lastname;
		
		private string _firstname;
		
		private string _title;
		
		private string _email;
		
		private string _passwords;
		
		private string _phonenum;
		
		private string _valid;
		
		private System.Nullable<System.DateTime> _datejoined;
		
		private decimal _piid;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuseridChanging(int value);
    partial void OnuseridChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnlastnameChanging(string value);
    partial void OnlastnameChanged();
    partial void OnfirstnameChanging(string value);
    partial void OnfirstnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordsChanging(string value);
    partial void OnpasswordsChanged();
    partial void OnphonenumChanging(string value);
    partial void OnphonenumChanged();
    partial void OnvalidChanging(string value);
    partial void OnvalidChanged();
    partial void OndatejoinedChanging(System.Nullable<System.DateTime> value);
    partial void OndatejoinedChanged();
    partial void OnpiidChanging(decimal value);
    partial void OnpiidChanged();
    #endregion
		
		public user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int userid
		{
			get
			{
				return this._userid;
			}
			set
			{
				if ((this._userid != value))
				{
					this.OnuseridChanging(value);
					this.SendPropertyChanging();
					this._userid = value;
					this.SendPropertyChanged("userid");
					this.OnuseridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastname", DbType="VarChar(50)")]
		public string lastname
		{
			get
			{
				return this._lastname;
			}
			set
			{
				if ((this._lastname != value))
				{
					this.OnlastnameChanging(value);
					this.SendPropertyChanging();
					this._lastname = value;
					this.SendPropertyChanged("lastname");
					this.OnlastnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstname", DbType="VarChar(50)")]
		public string firstname
		{
			get
			{
				return this._firstname;
			}
			set
			{
				if ((this._firstname != value))
				{
					this.OnfirstnameChanging(value);
					this.SendPropertyChanging();
					this._firstname = value;
					this.SendPropertyChanged("firstname");
					this.OnfirstnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(50)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwords", DbType="VarChar(15)")]
		public string passwords
		{
			get
			{
				return this._passwords;
			}
			set
			{
				if ((this._passwords != value))
				{
					this.OnpasswordsChanging(value);
					this.SendPropertyChanging();
					this._passwords = value;
					this.SendPropertyChanged("passwords");
					this.OnpasswordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenum", DbType="VarChar(20)")]
		public string phonenum
		{
			get
			{
				return this._phonenum;
			}
			set
			{
				if ((this._phonenum != value))
				{
					this.OnphonenumChanging(value);
					this.SendPropertyChanging();
					this._phonenum = value;
					this.SendPropertyChanged("phonenum");
					this.OnphonenumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valid", DbType="VarChar(10)")]
		public string valid
		{
			get
			{
				return this._valid;
			}
			set
			{
				if ((this._valid != value))
				{
					this.OnvalidChanging(value);
					this.SendPropertyChanging();
					this._valid = value;
					this.SendPropertyChanged("valid");
					this.OnvalidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datejoined", DbType="DateTime")]
		public System.Nullable<System.DateTime> datejoined
		{
			get
			{
				return this._datejoined;
			}
			set
			{
				if ((this._datejoined != value))
				{
					this.OndatejoinedChanging(value);
					this.SendPropertyChanging();
					this._datejoined = value;
					this.SendPropertyChanged("datejoined");
					this.OndatejoinedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_piid", DbType="Decimal(22,0) NOT NULL")]
		public decimal piid
		{
			get
			{
				return this._piid;
			}
			set
			{
				if ((this._piid != value))
				{
					this.OnpiidChanging(value);
					this.SendPropertyChanging();
					this._piid = value;
					this.SendPropertyChanged("piid");
					this.OnpiidChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
