@model Barcode

@{
    ViewBag.Title = "Quality Analysis";
    ViewBag.SubPageTitle = "Quality Analysis for " + Model.PlateName;

    var quality = Model.BarcodeFiles;
    var rows = quality.Select(a => a.WellRow).Distinct().OrderBy(a => a);
    var cols = quality.Select(a => a.WellColumn).Distinct().OrderBy(a => a);
    
    double sucessRate = Model.BarcodeFiles.Count(a => (a.End - a.Start) >= 100) / (double)Model.BarcodeFiles.Count() * 100;
}

@section scripts
{
    <style type="text/css">
        .neutral { color: blue; }
        .warning { color: red; }
        .good { color: green; }
    </style>
}

@section SubPageMenu
{
    <ul class="nav nav-pills">
        <li>@Html.ActionLink("Back to User Job", "Details", "UserJob", new {id = Model.UserJobPlate.UserJob.Id}, new {})</li>
    </ul>
}

<div class="well row-fluid">
    <div class="span4">
        <strong>Avg. Read Length:</strong>
        @(Model.BarcodeFiles.Sum(a => (a.End - a.Start)) / Model.BarcodeFiles.Count)
    </div>
    <div class="span4">
        <strong>Success Rate:</strong>
        @sucessRate %
    </div>
    <div class="span4">
        <strong>Status:</strong>
        @(!Model.Done ? "Pending" : (Model.Accepted ? "Accepted" : "Declined"))
    </div>
</div>

<table class="table">
    <thead>
        <tr>
            <th></th>
            @foreach(var col in cols)
            {
                <th>@col</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach(var row in rows)
        {
            <tr>
                <th>@row</th>
                @foreach(var col in cols)
                {
                    var cell = quality.FirstOrDefault(a => a.WellColumn == col && a.WellRow == row);
                    if (cell != null)
                    {
                        var cls = "neutral";
                        var diff = cell.End - cell.Start;
                        diff = diff < 0 ? 0 : diff;
                        if (diff >= 0 && diff < 100)
                        {
                            cls = "warning";
                        }
                        else if (diff >= 100 && diff <= 500)
                        {
                            cls = "good";
                        }
                        
                        <td class="@cls">@diff</td>
                    }
                    else
                    {
                        <td>n/a</td>
                    }
                }
            </tr>
        }
    </tbody>
</table>

@if (!Model.Accepted)
{
    <div class="form-actions">
        @using(Html.BeginForm("DecideQualityControl", "Results", new {id = Model.Id, accepted = true}, FormMethod.Post, new {style="display: inline-block;"}))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-primary btn-large">
                <i class="icon-ok icon-white"></i>
                Accept
            </button>    
        }
        @using(Html.BeginForm("DecideQualityControl", "Results", new {id = Model.Id, accepted = false}, FormMethod.Post, new {style="display: inline-block;"}))
        {
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger btn-large">
                <i class="icon-remove icon-white"></i>
                Decline
            </button>
        }
    </div>
}
