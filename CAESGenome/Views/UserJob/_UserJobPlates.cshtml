@using CAESGenome.Core.Resources
@model UserJob


@*@helper DisplayStage(string stageId)
{
    switch(stageId)
    {
        // bacterial clones
        case StageIds.BcWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.BcPlateSubmission:
            <div class="label stage label-info" data-id="@stageId" >Plate Submissions</div>
            break;
        case StageIds.BcRca:
            <div class="label stage label-important" data-id="@stageId" >RCA</div>
            break;
        case StageIds.BcSequencingReaction:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Bc3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
        
        // pcr product    
        case StageIds.PcrWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.PcrPlateSubmission:
            <div class="label stage label-info" data-id="@stageId" >Plate Submissions</div>
            break;
        case StageIds.PcrSequencingReaction:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Pcr3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
        
        // purified dna
        case StageIds.PdWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.PdPlateSubmission:
            <div class="label stage label-info" data-id="@stageId" >Plate Submissions</div>
            break;
        case StageIds.PdSequencingReaction:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Pd3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
                
        // user run sequencing
        case StageIds.UrsWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.UrsPlateSubmission:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Urs3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
            
        // sublibrary
        case StageIds.SlWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.SlPlateSubmission:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Sl3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
        
        // genotyping
        case StageIds.UgWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.UgPlateSubmission:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
        case StageIds.Ug3730xl:
            <div class="label stage label-success" data-id="@stageId" >3730xl</div>
            break;
            
        // qbot colony picking
        case StageIds.QpWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.QpPlateSubmission:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;

        // qbot plate replicating
        case StageIds.QrWebSubmittedPlates:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.QrPlateSubmission:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
            
        // qbot gridding
        case StageIds.QgPlateSubmission:
            <div class="label stage" data-id="@stageId" >Web Submitted Plates</div>
            break;
        case StageIds.QgWebSubmittedPlates:
            <div class="label stage label-warning" data-id="@stageId" >Sequencing Reaction</div>
            break;
    }
}*@

<style type="text/css">
    table.barcodes tr td:first-child { width: 90px;}
</style>

@foreach(var stage in Model.UserJobPlates.SelectMany(a => a.Barcodes).Select(a => a.Stage).Distinct().OrderBy(a => a.Order))
{
    <fieldset>
        <legend>
            <div class="pull-right">
                <button class="btn hastip" title="Print all Barcodes">
                    <i class="icon-print"></i>
                    All Barcodes
                </button>
                @if(!stage.IsComplete && Model.UserJobPlates.SelectMany(a => a.Barcodes).Where(a => a.Stage == stage).Any(a => !a.Done))
                {
                    <button class="btn hastip" title="Advance All Barcodes">
                        <i class="icon-share"></i>
                        All Barcodes
                    </button>    
                }
            </div>
            @stage.Name
        </legend>
        
        <table class="table barcodes">
            <thead>
                <tr>
                    <th></th>
                    <th>Barcode</th>
                    <th>Plate Name</th>
                    <th>Sub Plate Id</th>
                    <th>Date</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var barcode in Model.UserJobPlates.SelectMany(a => a.Barcodes).Where(a => a.Stage == stage))
                {
                    <tr>
                        <td>
                            @if (!barcode.Done)
                            {
                                if (User.IsInRole(RoleNames.Staff))
                                {
                                    if (!barcode.Stage.IsComplete)
                                    {
                                        using(Html.BeginForm("AdvanceBarcode", "UserJob", new {id=barcode.Id}, FormMethod.Post, new {style ="display:inline-block;"}))
                                        {
                                            @Html.AntiForgeryToken()
                                            <a href="javascript:;" class="btn hastip advance" title="Advance Barcode to Next Stage"><i class="icon-share"></i></a>
                                        }            
                                    }
                                
                                    if (barcode.Stage.IsComplete && barcode.BarcodeFiles.Count > 0)
                                    {
                                        if (barcode.BarcodeFiles.Any(a => !a.Validated))
                                        {
                                            <a href="javascript:;" class="btn hastip run-validation" title="Run Validation" data-id="@barcode.Id"><i class="icon-play"></i></a>     
                                            <img src="@Url.Content("~/Images/ajaxloader.gif")" style="display:none;" class="ajaxloader"/>
                                        }
                                        else
                                        {
                                            <a href="@Url.Action("QualityControl", "Results", new {id=barcode.Id})" title="View Quality Control Data" class="btn hastip">
                                                <i class="icon-th"></i>
                                            </a>
                                        }    
                                    }
                                }
                            }
                            @if (User.IsInRole(RoleNames.Staff))
                            {
                                using(Html.BeginForm("PrintBarcode", "UserJob", new {id=barcode.Id}, FormMethod.Post, new {style="display: inline-block;"}))
                                {
                                    <a href="javascript:;" class="btn hastip" title="Print barcode"><i class="icon-print"></i></a>
                                }    
                            }
                        </td>
                        <td>@barcode.Id</td>
                        <td>@barcode.PlateName</td>
                        <td>@barcode.SubPlateId</td>
                        <td>@barcode.DateCreated.ToShortDateString()</td>
                        <td>
                            @if (barcode.Done)
                            {
                                <div class="label label-success">Complete</div>
                            }
                            else if (barcode.BarcodeFiles.Any() && !barcode.Validated)
                            {
                                <div class="label label-warning">Validation Pending</div>    
                            }
                            else
                            {
                                <div class="label label-info">Open</div>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </fieldset>
}


@*<fieldset>
    
    <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Barcode</th>
                <th>Plate Name</th>
                <th>Sub Plate Id</th>
                @if(Model.JobType.Id == (int)JobTypeIds.BacterialClone)
                {
                    <th>Primer</th>    
                }
                <th>Date</th>
                <th>Status</th>
                <th>Stage</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var barcode in Model.UserJobPlates.SelectMany(a => a.Barcodes).OrderBy(a => a.Stage.Order).ThenBy(a => a.UserJobPlate.Id))
            {
                <tr>
                    <td>
                        
                    </td>
                    <td>
                        @barcode.Id
                        
                        
                    </td>
                    <td>@barcode.PlateName</td>
                    <td>@barcode.SubPlateId</td>
                    @if(Model.JobType.Id == (int)JobTypeIds.BacterialClone)
                    {
                        <td>@(barcode.Primer != null ? barcode.Primer.Name : "n/a")</td>                    
                    }
                    <td>@barcode.DateCreated.ToShortDateString()</td>
                    <td>@(barcode.Done ? "Complete" : "Open")</td>
                    <td>
                        @using(Html.BeginForm("AdvanceStageBarcodes", "UserJob", new {id=barcode.UserJobPlate.UserJob.Id, stage=barcode.Stage.Id}, FormMethod.Post, new {@class=""}))
                        {
                            @Html.AntiForgeryToken()
                            @DisplayStage(barcode.Stage.Id)    
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>


</fieldset>*@