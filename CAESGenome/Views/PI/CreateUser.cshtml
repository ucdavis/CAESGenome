@model UserViewModel

@{
    ViewBag.Title = "Create User";
    ViewBag.SubPagetitle = "Create User";
}

@section scripts
{
    <script type="text/javascript">
        $(function () {
            $("input[type='password']").change(function() {
                if ($("#Password").val() == $("#ReTypePassword").val()) {
                    $("#nomatch-icon").hide();
                    $("#match-icon").show('normal');
                } else {
                    $("#match-icon").hide();
                    $("#nomatch-icon").show('normal');
                }
            });
        });
    </script>
}

@using(Html.BeginForm("CreateUser", "PI", FormMethod.Post, new {@class="form-horizontal"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false)
    
    <div class="control-group">
        <fieldset>
            
            <legend>User Details</legend>

            <div class="control-group">
                @Html.LabelFor(model => model.User.UserName, new {@class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.User.UserName)
                    @Html.ValidationMessageFor(model => model.User.UserName)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.User.FirstName, new {@class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.User.FirstName)
                    @Html.ValidationMessageFor(model => model.User.FirstName)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.User.LastName, new {@class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.User.LastName)
                    @Html.ValidationMessageFor(model => model.User.LastName)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.User.Title, new {@class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.User.Title)
                    @Html.ValidationMessageFor(model => model.User.Title)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.User.Phone, new {@class = "control-label"})
                <div class="controls">
                    @Html.EditorFor(model => model.User.Phone)
                    @Html.ValidationMessageFor(model => model.User.Phone)
                </div>
            </div>
            <div class="control-group">
                <label for="Password" class="control-label">Password</label>
                <div class="controls">
                    @Html.Password("Password")
                </div>
            </div>
            <div class="control-group">
                <label for="Retype Password" class="control-label">Re-Type Password</label>
                <div class="controls">
                    @Html.Password("ReTypePassword")
                    
                    <span id="match-icon" class="label label-success hastip" title="Passwords Match" style="display: none;"><i class="icon-ok-sign"></i></span>
                    <span id="nomatch-icon" class="label label-important hastip" title="Passwords do not match" style="display:none;"><i class="icon-remove-sign"></i></span>

                </div>
            </div>
        </fieldset>
        
        <fieldset>
            
            <legend>Recharge Accounts</legend>
            
            <div class="control-group">
                @Html.LabelFor(model => model.User.RechargeAccounts, new {@class = "control-label"})
                <div class="controls">
                    @Html.DropDownList("User.RechargeAccounts", Model.RechargeAccounts.Select(a => new SelectListItem(){Text = a.AccountNum, Value = a.Id.ToString()}).ToList(), new {multiple="multiple"})
                    @Html.ValidationMessageFor(model => model.User.RechargeAccounts)
                </div>
            </div>

        </fieldset>
    </div>
    
    <div class="form-actions">
        <input type="submit" class="btn btn-primary" value="Save"/>
        @Html.ActionLink("Cancel", "Users", "PI", new {}, new {@class="btn"})
    </div>
}