@using CAESGenome.Core.Resources
@model UserViewModel

@Html.AntiForgeryToken()
@Html.ValidationSummary(false)
    
<div class="control-group">
    <fieldset>
            
        <legend>User Details</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.User.UserName, new {@class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.User.UserName)
                @Html.ValidationMessageFor(model => model.User.UserName)
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.User.FirstName, new {@class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.User.FirstName)
                @Html.ValidationMessageFor(model => model.User.FirstName)
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.User.LastName, new {@class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.User.LastName)
                @Html.ValidationMessageFor(model => model.User.LastName)
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.User.Title, new {@class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.User.Title)
                @Html.ValidationMessageFor(model => model.User.Title)
            </div>
        </div>
        <div class="control-group">
            @Html.LabelFor(model => model.User.Phone, new {@class = "control-label"})
            <div class="controls">
                @Html.EditorFor(model => model.User.Phone)
                @Html.ValidationMessageFor(model => model.User.Phone)
            </div>
        </div>
        @if((bool?)ViewBag.NewUser ?? false)
        {
            <div class="control-group">
                <label for="Password" class="control-label">Password</label>
                <div class="controls">
                    @Html.Password("Password")
                </div>
            </div>    
            <div class="control-group">
                <label for="Retype Password" class="control-label">Re-Type Password</label>
                <div class="controls">
                    @Html.Password("ReTypePassword")
                    
                    <span id="match-icon" class="label label-success hastip" title="Passwords Match" style="display: none;"><i class="icon-ok-sign"></i></span>
                    <span id="nomatch-icon" class="label label-important hastip" title="Passwords do not match" style="display:none;"><i class="icon-remove-sign"></i></span>

                </div>
            </div>
        }
        
        
    </fieldset>

    @if((bool?)ViewBag.EditUser ?? false)
    {
        <fieldset>
            
            <legend>Recharge Accounts</legend>
            
            <div class="control-group">
                @Html.LabelFor(model => model.User.RechargeAccounts, new {@class = "control-label"})
                <div class="controls">
                    @*@Html.DropDownList("User.RechargeAccounts", Model.RechargeAccounts.Select(a => new SelectListItem(){Text = a.AccountNum, Value = a.Id.ToString(), Selected = Model.User.RechargeAccounts.Select(b => b.AccountNum).Contains(a.AccountNum) }).ToList(), new {multiple="multiple"})*@
                    @*@Html.DropDownList("User.RechargeAccounts", Model.RechargeAccounts, new {multiple="multiple"})*@
                    
                    <select id="User_RechargeAccounts" name="User.RechargeAccounts" multiple>
                        @foreach (var ra in Model.RechargeAccounts)
                        {
                            <option value="@ra.Value" @(ra.Selected ? "selected" : string.Empty)>@ra.Text</option>
                        }
                    </select>

                    @Html.ValidationMessageFor(model => model.User.RechargeAccounts)
                </div>
            </div>

        </fieldset>    
    }
    
    @if((bool?)ViewBag.CreatePI ?? false)
    {
        <fieldset>
            <legend>University/Department</legend>
            
            <div class="control-group">
                @Html.LabelFor(model => model.User.University, new {@class = "control-label"})
                <div class="controls">
                    @*@Html.DropDownListFor(a => a.User.University, Model.Universities, new {@class="input-xxlarge"})*@
                    @Html.DropDownList("User.University", Model.Universities, "--Select University--", new {@class="input-xxlarge"})
                    @Html.ValidationMessageFor(model => model.User.University)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(model => model.User.Department, new {@class = "control-label"})
                <div class="controls">
                    @*@Html.DropDownListFor(a => a.User.Department, Model.Departments, new {@class="input-xxlarge"})*@
                    @Html.DropDownList("User.Department", Model.Departments, "--Select Department--", new {@class="input-xxlarge", disabled=Model.Departments.Any() ? "disabled" : string.Empty})
                    @Html.ValidationMessageFor(model => model.User.Department)
                </div>
            </div>

        </fieldset>
        
        <fieldset>
            <legend>Role</legend>
            
            <div class="control-group">
                <label for="role" class="control-label">Role(s)<span class="required">*</span></label>
                <div class="controls">
                    <ul class="unstyled">
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="roles" value="@RoleNames.PI" checked='@(Model.IsPi ? "checked" : string.Empty)'/>@RoleNames.PI
                            </label>
                        </li>
                        <li>
                            <label class="checkbox">
                                <input type="checkbox" name="roles" value="@RoleNames.Staff" checked='@(Model.IsStaff ? "checked" : string.Empty)'/>@RoleNames.Staff
                            </label>
                        </li>
                    </ul>
                    @Html.ValidationMessage("roles")
                </div>
            </div>
        </fieldset>
    }
</div>
    
<div class="form-actions">
    <input type="submit" class="btn btn-primary" value="Save"/>
    @Html.ActionLink("Cancel", "Users", "PI", new {}, new {@class="btn"})
</div>